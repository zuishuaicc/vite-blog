import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.b85f4cea.js";const A=JSON.parse('{"title":"使用 neon 实现 Rust 开发 node 模块化插件","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"views/application/rust/rust-node.md","filePath":"views/application/rust/rust-node.md","lastUpdated":1719498828000}'),p={name:"views/application/rust/rust-node.md"},o=l(`<h1 id="使用-neon-实现-rust-开发-node-模块化插件" tabindex="-1">使用 neon 实现 Rust 开发 node 模块化插件 <a class="header-anchor" href="#使用-neon-实现-rust-开发-node-模块化插件" aria-label="Permalink to &quot;使用 neon 实现 Rust 开发 node 模块化插件&quot;">​</a></h1><p>官网：<a href="https://github.com/neon-bindings/neon" target="_blank" rel="noreferrer">https://github.com/neon-bindings/neon</a></p><h2 id="一-使用-create-neon-脚手架创建项目" tabindex="-1">一.使用 create-neon 脚手架创建项目 <a class="header-anchor" href="#一-使用-create-neon-脚手架创建项目" aria-label="Permalink to &quot;一.使用 create-neon 脚手架创建项目&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code-dark"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">init</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">neon</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">rslib</span></span></code></pre><pre class="shiki material-theme-palenight vp-code-light"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">init</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">neon</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">rslib</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>接下来就是按照提示来输入相关的项目信息，全部按回车键跳过就好，后续需要修改可以在 <code>package.json</code>和 <code>Cargo.toml</code> 中进行修改。</p><p>命令创建完之后，我们可以看见这样的一个目录结构：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight vp-code-dark"><code><span class="line"><span style="color:#babed8;">└─RSLIB</span></span>
<span class="line"><span style="color:#babed8;">    │  .gitignore</span></span>
<span class="line"><span style="color:#babed8;">    │  Cargo.toml</span></span>
<span class="line"><span style="color:#babed8;">    │  package.json</span></span>
<span class="line"><span style="color:#babed8;">    │  README.md</span></span>
<span class="line"><span style="color:#babed8;">    └─src</span></span>
<span class="line"><span style="color:#babed8;">       lib.rs</span></span></code></pre><pre class="shiki material-theme-palenight vp-code-light"><code><span class="line"><span style="color:#babed8;">└─RSLIB</span></span>
<span class="line"><span style="color:#babed8;">    │  .gitignore</span></span>
<span class="line"><span style="color:#babed8;">    │  Cargo.toml</span></span>
<span class="line"><span style="color:#babed8;">    │  package.json</span></span>
<span class="line"><span style="color:#babed8;">    │  README.md</span></span>
<span class="line"><span style="color:#babed8;">    └─src</span></span>
<span class="line"><span style="color:#babed8;">       lib.rs</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="二-编写-rust-代码" tabindex="-1">二.编写 rust 代码 <a class="header-anchor" href="#二-编写-rust-代码" aria-label="Permalink to &quot;二.编写 rust 代码&quot;">​</a></h2><p>打开文件 <code>RSLIB/src/lib.rs</code> ，写入如下代码：</p><div class="language-rust vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki material-theme-palenight vp-code-dark"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 预导入 neon 所有相关的属性</span></span>
<span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> neon</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">prelude</span><span style="color:#89DDFF;">::*;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 编写函数，cx 里面放着一些关于函数的上下文信息，JsResult是一个泛型的返回类型</span></span>
<span class="line"><span style="color:#F78C6C;">fn</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">count_words</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">mut</span><span style="color:#BABED8;"> cx</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">FunctionContext</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">JsResult</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">JsNumber</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // JS函数的第一个参数，类型为 string</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> text </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> cx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">argument</span><span style="color:#89DDFF;">::&lt;</span><span style="color:#FFCB6B;">JsString</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)?.</span><span style="color:#82AAFF;">value</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#C792EA;">mut</span><span style="color:#BABED8;"> cx</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // JS函数的第二个参数，类型为 string</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> word </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> cx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">argument</span><span style="color:#89DDFF;">::&lt;</span><span style="color:#FFCB6B;">JsString</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)?.</span><span style="color:#82AAFF;">value</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#C792EA;">mut</span><span style="color:#BABED8;"> cx</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 返回一个数字，计算文本中出现单词的次数，将所有单词转小写，然后再根据空格分割，再过滤算出个数</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">Ok</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">cx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">number</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BABED8;">        text</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">to_lowercase</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#89DDFF;">(|</span><span style="color:#BABED8;">s</span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> s </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">word</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">count</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">as</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">f64</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">#[</span><span style="color:#BABED8;">neon</span><span style="color:#89DDFF;">::</span><span style="color:#BABED8;">main</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#F78C6C;">fn</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">mut</span><span style="color:#BABED8;"> cx</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">ModuleContext</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">NeonResult</span><span style="color:#89DDFF;">&lt;()&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    cx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">export_function</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">count_words</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> count_words</span><span style="color:#89DDFF;">)?;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">Ok</span><span style="color:#89DDFF;">(())</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><pre class="shiki material-theme-palenight vp-code-light"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 预导入 neon 所有相关的属性</span></span>
<span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> neon</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">prelude</span><span style="color:#89DDFF;">::*;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 编写函数，cx 里面放着一些关于函数的上下文信息，JsResult是一个泛型的返回类型</span></span>
<span class="line"><span style="color:#F78C6C;">fn</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">count_words</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">mut</span><span style="color:#BABED8;"> cx</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">FunctionContext</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">JsResult</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">JsNumber</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // JS函数的第一个参数，类型为 string</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> text </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> cx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">argument</span><span style="color:#89DDFF;">::&lt;</span><span style="color:#FFCB6B;">JsString</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)?.</span><span style="color:#82AAFF;">value</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#C792EA;">mut</span><span style="color:#BABED8;"> cx</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // JS函数的第二个参数，类型为 string</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> word </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> cx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">argument</span><span style="color:#89DDFF;">::&lt;</span><span style="color:#FFCB6B;">JsString</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)?.</span><span style="color:#82AAFF;">value</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#C792EA;">mut</span><span style="color:#BABED8;"> cx</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 返回一个数字，计算文本中出现单词的次数，将所有单词转小写，然后再根据空格分割，再过滤算出个数</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">Ok</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">cx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">number</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BABED8;">        text</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">to_lowercase</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#BABED8;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#89DDFF;">(|</span><span style="color:#BABED8;">s</span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> s </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">word</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">count</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">as</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">f64</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">#[</span><span style="color:#BABED8;">neon</span><span style="color:#89DDFF;">::</span><span style="color:#BABED8;">main</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#F78C6C;">fn</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">mut</span><span style="color:#BABED8;"> cx</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">ModuleContext</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">NeonResult</span><span style="color:#89DDFF;">&lt;()&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    cx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">export_function</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">count_words</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> count_words</span><span style="color:#89DDFF;">)?;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">Ok</span><span style="color:#89DDFF;">(())</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="三-编译为-nodejs-插件" tabindex="-1">三.编译为 nodejs 插件 <a class="header-anchor" href="#三-编译为-nodejs-插件" aria-label="Permalink to &quot;三.编译为 nodejs 插件&quot;">​</a></h2><p>编写完成 Rust 代码之后，接下来将项目生成 node 模块，项目根目录下运行命令：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code-dark"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span></span></code></pre><pre class="shiki material-theme-palenight vp-code-light"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>然后依赖会自动安装并且会执行相应的 cargo 编译命令，完成之后你可以看到在根目录下生成了一个新文件 <code>index.node</code></p><h2 id="四-node-js-加载插件文件" tabindex="-1">四.Node.js 加载插件文件 <a class="header-anchor" href="#四-node-js-加载插件文件" aria-label="Permalink to &quot;四.Node.js 加载插件文件&quot;">​</a></h2><h3 id="_1-commonjs-模块化加载插件" tabindex="-1">1.commonjs 模块化加载插件 <a class="header-anchor" href="#_1-commonjs-模块化加载插件" aria-label="Permalink to &quot;1.commonjs 模块化加载插件&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code-dark"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> rsModel </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./index.node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> testText </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Nice to meet you</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> count </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> rsModel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">count_words</span><span style="color:#BABED8;">(testText</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">you</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(count) </span><span style="color:#676E95;font-style:italic;">// 输出1</span></span></code></pre><pre class="shiki material-theme-palenight vp-code-light"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> rsModel </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./index.node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> testText </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Nice to meet you</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> count </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> rsModel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">count_words</span><span style="color:#BABED8;">(testText</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">you</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(count) </span><span style="color:#676E95;font-style:italic;">// 输出1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_2-esmodule-模块化加载插件" tabindex="-1">2.esmodule 模块化加载插件 <a class="header-anchor" href="#_2-esmodule-模块化加载插件" aria-label="Permalink to &quot;2.esmodule 模块化加载插件&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight vp-code-dark"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">createRequire</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">module</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> cjsRequire </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">createRequire</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">meta</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">url)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> rsModel </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">cjsRequire</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./index.node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> testText </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Nice to meet you</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> count </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> rsModel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">count_words</span><span style="color:#BABED8;">(testText</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">you</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(count) </span><span style="color:#676E95;font-style:italic;">// 输出1</span></span></code></pre><pre class="shiki material-theme-palenight vp-code-light"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">createRequire</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">module</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> cjsRequire </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">createRequire</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">meta</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">url)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> rsModel </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">cjsRequire</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./index.node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> testText </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Nice to meet you</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> count </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> rsModel</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">count_words</span><span style="color:#BABED8;">(testText</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">you</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(count) </span><span style="color:#676E95;font-style:italic;">// 输出1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="五-在-electron-中使用-neon-的区别" tabindex="-1">五.在 Electron 中使用 neon 的区别 <a class="header-anchor" href="#五-在-electron-中使用-neon-的区别" aria-label="Permalink to &quot;五.在 Electron 中使用 neon 的区别&quot;">​</a></h3><p><a href="https://juejin.cn/post/7028816441935675405" target="_blank" rel="noreferrer">https://juejin.cn/post/7028816441935675405</a><br><a href="https://juejin.cn/post/7029325530168033288" target="_blank" rel="noreferrer">https://juejin.cn/post/7029325530168033288</a></p>`,21),e=[o];function t(c,r,D,y,F,i){return n(),a("div",null,e)}const u=s(p,[["render",t]]);export{A as __pageData,u as default};
